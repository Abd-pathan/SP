#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
//#include <sys/wait.h>

int main() {
    FILE* ptr1;
    char str1[50];
    char filename1[100];

    printf("\nEnter the name of the file 1:\n ");
    scanf("%s", filename1);
    ptr1 = fopen(filename1, "r");

    char line[100];
    while (fgets(line, sizeof(line), ptr1) != NULL) {
        printf("Line: %s", line);
    }

    pid_t pid;
    int status;

    pid = fork();
    if (pid == 0) { /* this is child process */
        printf("This is the child process\n");
        fclose(ptr1);
        execl("/usr/bin/uname", "uname", filename1, NULL);
         // If execl fails, an error will be printed
        perror("execl");
        exit(1);
    } else if (pid < 0) {
        // Fork failed
        perror("fork");
        exit(1);
    } else {
        // This is the parent process
        waitpid(pid, &status, 0); // Wait for the child process to finish

        printf("\nParent process completed\n");
    }

    printf("\nSuccess\n ");

    fclose(ptr1);
    return 0;
}
